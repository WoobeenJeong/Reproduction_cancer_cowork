#conda activate qiime2-amplicon-2024.2
# gzip ./*.fastq

####################Using script to generate the manifest file######################
awk 'NR==1{print "sample-id\tforward-absolute-filepath\treverse-absolute-filepath"} \
      NR>1{print $1"\t./human16s/"$1"_R1.fq.gz\t./human16s/"$1"_R2.fq.gz"}' metadata.txt     >./human16s/manifest_donor


#################import the data################

# paired end 
qiime tools import \
  --type 'SampleData[PairedEndSequencesWithQuality]' \
  --input-path manifest_human \
  --output-path  paired-end-demux.qza \
  --input-format PairedEndFastqManifestPhred33


#single end(in this paper)
time qiime tools import --type "SampleData[SequencesWithQuality]"
--input-format SingleEndFastqManifestPhred33V2 
--input-path manifest_human.csv 
--output-path demux_seqs.qza

#visualize the demux_seq 
time qiime demux summarize \
--i-data demux_seqs.qza \
--o-visualization demux_seqs.qzv

###################filter the sequence based on the quality#####################

#quality filter
time qiime quality-filter q-score \
--i-demux demux_seqs.qza \      
--o-filtered-sequences demux-filtered.qza \        
--o-filter-stats demux-filter-stats.qza    


#remove the primer
qiime cutadapt trim-paired \
--i-demultiplexed-sequences demux-filtered.qza \
--p-cores 4 \
--p-front GGCGVACGGGTGAGTAA \
--p-no-indels \
--o-trimmed-sequences primer-trimmed-demux.qza











